// Fonction pour télécharger tous les bulletins en PDF
const downloadAllBulletinsAsPDF = () => {
  if (!bulletinsReady) return;
  
  const doc = new jsPDF();
  doc.setFontSize(16);
  
  studentBulletins.forEach((bulletin, index) => {
    if (index > 0) doc.addPage();
    
    const { student, subjectGrades, generalAverage, className, term, rank, isAdmitted } = bulletin;
    
    // En-tête du bulletin
    doc.setFillColor(0, 113, 188);
    doc.rect(0, 0, 210, 20, 'F');
    doc.setTextColor(255, 255, 255);
    doc.text(`BULLETIN DE NOTES`, 105, 12, { align: 'center' });
    
    // Informations de l'école et du trimestre
    doc.setTextColor(0, 0, 0);
    doc.setFontSize(12);
    doc.text(`École: ${schoolName || 'Ntik'}`, 105, 30, { align: 'center' });
    doc.text(`Classe: ${className} - ${term}`, 105, 38, { align: 'center' });
    
    // Informations de l'élève
    doc.setFontSize(10);
    doc.text(`Élève: ${student.firstName} ${student.lastName}`, 20, 50);
    doc.text(`Rang: ${rank} sur ${studentBulletins.length}`, 20, 58);
    doc.text(`Moyenne Générale: ${generalAverage.toFixed(2)}/20`, 150, 50);
    
    // Statut d'admission
    if (isAdmitted) {
      doc.setFillColor(0, 150, 0); // Vert pour admis
      doc.rect(150, 55, 30, 8, 'F');
      doc.setTextColor(255, 255, 255);
      doc.text('ADMIS', 165, 60, { align: 'center' });
    } else {
      doc.setFillColor(220, 0, 0); // Rouge pour échec
      doc.rect(150, 55, 30, 8, 'F');
      doc.setTextColor(255, 255, 255);
      doc.text('ÉCHEC', 165, 60, { align: 'center' });
    }
    doc.setTextColor(0, 0, 0); // Réinitialiser la couleur du texte
    
    // Tableau des notes par matière
    doc.setFontSize(8);
    
    // En-têtes du tableau
    let yPos = 60;
    doc.setFillColor(240, 240, 240);
    doc.rect(20, yPos, 170, 7, 'F');
    doc.text('Matière', 22, yPos + 5);
    doc.text('Coef.', 70, yPos + 5);
    doc.text('Devoirs', 85, yPos + 5);
    doc.text('Compositions', 115, yPos + 5);
    doc.text('Moyenne', 160, yPos + 5);
    
    yPos += 10;
    
    // Contenu du tableau
    Object.entries(subjectGrades).forEach(([subjectName, data]) => {
      // Vérifier s'il reste de la place sur la page, sinon ajouter une nouvelle page
      if (yPos > 270) {
        doc.addPage();
        yPos = 20;
      }
      
      doc.text(subjectName, 22, yPos);
      doc.text(data.coefficient.toString(), 70, yPos);
      
      // Notes des devoirs
      const devoirsText = data.devoirs.map(d => d.value.toFixed(1)).join(', ');
      doc.text(data.devoirs.length > 0 ? devoirsText : '-', 85, yPos);
      
      // Notes des compositions
      const compositionsText = data.compositions.map(c => c.value.toFixed(1)).join(', ');
      doc.text(data.compositions.length > 0 ? compositionsText : '-', 115, yPos);
      
      // Moyenne de la matière
      doc.text(data.average.toFixed(2), 160, yPos);
      
      yPos += 8;
    });
    
    // Pied de page avec la moyenne générale
    doc.setFontSize(10);
    doc.setFillColor(0, 113, 188);
    doc.rect(100, yPos + 5, 90, 8, 'F');
    doc.setTextColor(255, 255, 255);
    doc.text(`Moyenne Générale: ${generalAverage.toFixed(2)}/20`, 145, yPos + 10, { align: 'center' });
  });
  
  doc.save(`Bulletins_${selectedClass}_${selectedTerm.replace(/\s/g, '_')}.pdf`);
  
  useToastToast({
    description: `${studentBulletins.length} bulletins ont été téléchargés en PDF.`
  });
};
