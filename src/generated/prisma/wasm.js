
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  schoolName: 'schoolName',
  schoolAddress: 'schoolAddress',
  loggedIn: 'loggedIn',
  userRole: 'userRole',
  schoolId: 'schoolId',
  userToken: 'userToken',
  last_sync: 'last_sync',
  activeSchoolYear: 'activeSchoolYear',
  roleId: 'roleId',
  permissions: 'permissions',
  schoolYearStartDate: 'schoolYearStartDate',
  directorName: 'directorName',
  directorGender: 'directorGender',
  schoolLogo: 'schoolLogo'
};

exports.Prisma.ClassesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  level: 'level',
  school_id: 'school_id',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.StudentsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  first_name: 'first_name',
  genre: 'genre',
  birth_date: 'birth_date',
  picture_url: 'picture_url',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted',
  matricul: 'matricul'
};

exports.Prisma.RegistrationsScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  class_id: 'class_id',
  school_year: 'school_year',
  state: 'state',
  registration_date: 'registration_date',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.TeachersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  first_name: 'first_name',
  phone: 'phone',
  email: 'email',
  adress: 'adress',
  password_hash: 'password_hash',
  role_id: 'role_id',
  speciality: 'speciality',
  matricule: 'matricule',
  supabase_id: 'supabase_id',
  user_supabase_id: 'user_supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted',
  hourlyRate: 'hourlyRate',
  school_id: 'school_id'
};

exports.Prisma.TeacherWorkHoursScalarFieldEnum = {
  id: 'id',
  teacher_id: 'teacher_id',
  subject_id: 'subject_id',
  date: 'date',
  start_time: 'start_time',
  end_time: 'end_time',
  hours: 'hours',
  notes: 'notes',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.LessonsScalarFieldEnum = {
  id: 'id',
  teacher_id: 'teacher_id',
  class_id: 'class_id',
  subject_id: 'subject_id',
  school_year: 'school_year',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.SubjectsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  class_id: 'class_id',
  school_year: 'school_year',
  coefficient: 'coefficient',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.NotesScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  lesson_id: 'lesson_id',
  value: 'value',
  type: 'type',
  quarter: 'quarter',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.ParentsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  first_name: 'first_name',
  phone: 'phone',
  email: 'email',
  adress: 'adress',
  gender: 'gender',
  profession: 'profession',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted',
  school_id: 'school_id'
};

exports.Prisma.StudentParentsScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  parent_id: 'parent_id',
  relation: 'relation',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  id: 'id',
  registration_id: 'registration_id',
  amount: 'amount',
  method: 'method',
  date: 'date',
  reference: 'reference',
  emitter_id: 'emitter_id',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted',
  single_fee_id: 'single_fee_id',
  fee_template_id: 'fee_template_id',
  period_identifier: 'period_identifier'
};

exports.Prisma.SingleFeeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  amount: 'amount',
  due_date: 'due_date',
  school_year: 'school_year',
  level: 'level',
  class_id: 'class_id',
  school_id: 'school_id',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.FeeTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  amount: 'amount',
  frequency: 'frequency',
  due_day: 'due_day',
  applicable_months: 'applicable_months',
  school_id: 'school_id',
  applies_to_level: 'applies_to_level',
  applies_to_class_id: 'applies_to_class_id',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.AttendancesScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  date: 'date',
  state: 'state',
  justification: 'justification',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.EmployeesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  first_name: 'first_name',
  phone: 'phone',
  email: 'email',
  adress: 'adress',
  gender: 'gender',
  job_title: 'job_title',
  salary: 'salary',
  matricule: 'matricule',
  school_id: 'school_id',
  password_hash: 'password_hash',
  supabase_id: 'supabase_id',
  user_supabase_id: 'user_supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.SalaryPaymentsScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  base_salary: 'base_salary',
  bonus_amount: 'bonus_amount',
  total_amount: 'total_amount',
  payment_date: 'payment_date',
  notes: 'notes',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.SchedulesScalarFieldEnum = {
  id: 'id',
  lesson_id: 'lesson_id',
  day_of_week: 'day_of_week',
  start_time: 'start_time',
  end_time: 'end_time',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.FinancialCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  school_id: 'school_id',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.FinancialTransactionScalarFieldEnum = {
  id: 'id',
  date: 'date',
  description: 'description',
  amount: 'amount',
  type: 'type',
  category_id: 'category_id',
  school_id: 'school_id',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.BudgetScalarFieldEnum = {
  id: 'id',
  category: 'category',
  amount: 'amount',
  period_start: 'period_start',
  period_end: 'period_end',
  school_id: 'school_id',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.FinancialReportScalarFieldEnum = {
  id: 'id',
  title: 'title',
  generated_at: 'generated_at',
  start_date: 'start_date',
  end_date: 'end_date',
  content: 'content',
  school_id: 'school_id',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.DispatchRuleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  source_single_fee_id: 'source_single_fee_id',
  school_id: 'school_id',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.DispatchRuleDetailScalarFieldEnum = {
  id: 'id',
  dispatch_rule_id: 'dispatch_rule_id',
  destination_category_id: 'destination_category_id',
  percentage: 'percentage',
  supabase_id: 'supabase_id',
  last_modified: 'last_modified',
  needs_sync: 'needs_sync',
  is_deleted: 'is_deleted'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Settings: 'Settings',
  Classes: 'Classes',
  Students: 'Students',
  Registrations: 'Registrations',
  Teachers: 'Teachers',
  TeacherWorkHours: 'TeacherWorkHours',
  Lessons: 'Lessons',
  Subjects: 'Subjects',
  Notes: 'Notes',
  Parents: 'Parents',
  StudentParents: 'StudentParents',
  Payments: 'Payments',
  SingleFee: 'SingleFee',
  FeeTemplate: 'FeeTemplate',
  Attendances: 'Attendances',
  Employees: 'Employees',
  SalaryPayments: 'SalaryPayments',
  Schedules: 'Schedules',
  FinancialCategory: 'FinancialCategory',
  FinancialTransaction: 'FinancialTransaction',
  Budget: 'Budget',
  FinancialReport: 'FinancialReport',
  DispatchRule: 'DispatchRule',
  DispatchRuleDetail: 'DispatchRuleDetail'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
